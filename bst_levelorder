
class node:
    def __init__(self,data):
        self.left=None
        self.right=None
        self.val=data
    
def insert(root,node): 
    if root is None: 
        root = node
    else: 
        if root.val < node.val: 
            if root.right is None: 
                root.right = node 
            else: 
                insert(root.right, node) 
        else: 
            if root.left is None: 
                root.left = node 
            else: 
                insert(root.left, node)
                  
def height(root):
    if root is None:
        return 0
    else:
        m=height(root.left)
        n=height(root.right)
        return max(m+1,n+1)
def printLevelOrder(root): 
    h = height(root) 
    for i in range(1, h+1): 
        printGivenLevel(root, i) 
def printGivenLevel(root,level): 
    if root is None: 
        return
    if level == 1:
        print(root.val,end=" ") 
    elif level > 1 : 
        printGivenLevel(root.left , level-1) 
        printGivenLevel(root.right , level-1) 
          
i=0
while(True):
    n=int(input())
    if i==0:
        r=node(n)
    elif n==-1:
        break
    else:
        insert(r,node(n))
    i=i+1
print("Level order Traversal: ")
printLevelOrder(r)

      
      
        
